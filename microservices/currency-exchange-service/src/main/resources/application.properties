spring.application.name=currency-exchange
spring.config.import=optional:configserver:http://localhost:8888
server.port=8000
spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
management.endpoints.web.exposure.include=*
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#By default, data.sql scripts are now run before Hibernate is initialized. 
#This aligns the behaviour of basic script-based initialization with that of Flyway and Liquibase. 
#If you want to use data.sql to populate a schema created by Hibernate, 
#set spring.jpa.defer-datasource-initialization to true. 
#While mixing database initialization technologies is not recommended, 
#this will also allow you to use a schema.sql script to build upon a Hibernate-created schema before itâ€™s populated via data.sql
spring.jpa.defer-datasource-initialization=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

resilience4j.retry.instances.sample-api-condition.maxAttempts=5
resilience4j.retry.instances.sample-api-condition.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s
resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api-condition.maxConcurrentCalls=10

spring.sleuth.sampler.probability=1.0

# Since we are runnning zipkin on default port we are not specifying below property. If we run it on some other port
# we need to configure below property
##spring.zipkin.base-url=http://localhost:9411/